- type: entity
  save: false
  id: BaseTriomob
  abstract: true
  components:
  - type: Sprite
    layers:
    - map: [ "enum.HumanoidVisualLayers.Chest" ]
    - map: [ "enum.HumanoidVisualLayers.Head" ]
    - map: [ "enum.HumanoidVisualLayers.Snout" ]
    - map: [ "enum.HumanoidVisualLayers.Eyes" ]
    - map: [ "enum.HumanoidVisualLayers.RArm" ]
    - map: [ "enum.HumanoidVisualLayers.LArm" ]
    - map: [ "enum.HumanoidVisualLayers.RLeg" ]
    - map: [ "enum.HumanoidVisualLayers.LLeg" ]
    - shader: StencilClear
      sprite: Mobs/Species/Human/parts.rsi #PJB on stencil clear being on the left leg: "...this is 'fine'" -https://github.com/space-wizards/space-station-14/pull/12217#issuecomment-1291677115
      # its fine, but its still very stupid that it has to be done like this instead of allowing sprites to just directly insert a stencil clear.
      # sprite refactor when
      state: l_leg
    - shader: StencilMask
      map: ["enum.HumanoidVisualLayers.StencilMask"]
      sprite: Mobs/Customization/masking_helpers.rsi
      state: unisex_full
      visible: false
    - map: ["jumpsuit"]
    - map: ["enum.HumanoidVisualLayers.LFoot"]
    - map: ["enum.HumanoidVisualLayers.RFoot"]
    - map: ["enum.HumanoidVisualLayers.LHand"]
    - map: ["enum.HumanoidVisualLayers.RHand"]
    - map: [ "gloves" ]
    - map: [ "shoes" ]
    - map: [ "ears" ]
    - map: [ "outerClothing" ]
    - map: [ "eyes" ]
    - map: [ "belt" ]
    - map: [ "id" ]
    - map: [ "neck" ]
    - map: [ "back" ]
    - map: [ "enum.HumanoidVisualLayers.FacialHair" ]
    - map: [ "enum.HumanoidVisualLayers.Hair" ]
    - map: [ "enum.HumanoidVisualLayers.HeadSide" ]
    - map: [ "enum.HumanoidVisualLayers.HeadTop" ]
    - map: [ "enum.HumanoidVisualLayers.Tail" ]
    - map: [ "mask" ]
    - map: [ "head" ]
    - map: [ "pocket1" ]
    - map: [ "pocket2" ]
    - map: ["enum.HumanoidVisualLayers.Handcuffs"]
      color: "#ffffff"
      sprite: Objects/Misc/handcuffs.rsi
      state: body-overlay-2
      visible: false
    - map: [ "clownedon" ]
      sprite: "Effects/creampie.rsi"
      state: "creampie_human"
      visible: false
    noRot: true
    drawdepth: Mobs
  - type: DamageVisuals
    thresholds: [ 10, 20, 30, 50, 70, 100 ]
    targetLayers:
    - "enum.HumanoidVisualLayers.Chest"
    - "enum.HumanoidVisualLayers.Head"
    - "enum.HumanoidVisualLayers.LArm"
    - "enum.HumanoidVisualLayers.LLeg"
    - "enum.HumanoidVisualLayers.RArm"
    - "enum.HumanoidVisualLayers.RLeg"
    damageOverlayGroups:
      Brute:
        sprite: Mobs/Effects/brute_damage.rsi
        color: "#FF0000"
      Burn:
        sprite: Mobs/Effects/burn_damage.rsi
  - type: Physics
    bodyType: KinematicController
  - type: Clickable
  - type: InteractionOutline
  - type: InputMover
  - type: Input
    context: "human"
  - type: LagCompensation
  - type: MobMover
  - type: Actions
  - type: Alerts
  - type: Appearance
  - type: DoAfter
  - type: Examiner
  - type: Eye
  - type: ContentEye
  - type: CameraRecoil
  - type: MovementSpeedModifier
  - type: Polymorphable
  - type: LanguageSpeaker
  - type: RequireProjectileTarget
    active: False
  - type: AnimatedEmotes
  - type: OwnInteractionVerbs
    allowedVerbs: []
  - type: Damageable
    damageContainer: Biological
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTypeTrigger
        damageType: Blunt
        damage: 2500
      behaviors:
      - !type:GibBehavior { }
    - trigger:
        !type:DamageTypeTrigger
        damageType: Heat
        damage: 3000
      behaviors:
      - !type:SpawnEntitiesBehavior
        spawnInContainer: true
        spawn:
          Ash:
            min: 1
            max: 1
      - !type:BurnBodyBehavior { }
      - !type:PlaySoundBehavior
        sound:
          collection: MeatLaserImpact
  - type: Stamina
  - type: MobState
  - type: MobThresholds
    thresholds:
      0: Alive
      2000: Critical
      2200: Dead
  - type: MobStateActions
    actions:
      Critical:
      - ActionCritSuccumb
      - ActionCritFakeDeath
      - ActionCritLastWords
  - type: Deathgasp
  - type: HealthExaminable
    examinableTypes:
    - Blunt
    - Slash
    - Piercing
    - Heat
    - Shock
  - type: DamageOnHighSpeedImpact
    damage:
      types:
        Blunt: 5
    soundHit:
      path: /Audio/Effects/hit_kick.ogg
  - type: Pullable
  - type: LightningTarget
    priority: 2
    lightningExplode: false
  - type: CombatMode
    canDisarm: true
  - type: MeleeWeapon
    hidden: true
    soundHit:
      collection: MetalThud
    damage:
      groups:
        Brute: 6
  - type: Flammable
    fireSpread: true
    canResistFire: true
    damage: #per second, scales with number of fire 'stacks'
      types:
        Heat: 2
  - type: FireVisuals
    sprite: Mobs/Effects/onfire.rsi
    normalState: Generic_mob_burning
  - type: SolutionContainerManager
  - type: InjectableSolution
    solution: chemicals
  - type: Bloodstream
    bloodlossDamage:
      types:
        Bloodloss: 0.5
    bloodlossHealDamage:
      types:
        Bloodloss: -1
    bloodRegenerationHunger: 1
    bloodRegenerationThirst: 1.5
  - type: Icon # It will not have an icon in the adminspawn menu without this. Body parts seem fine for whatever reason.
    sprite: Mobs/Species/Human/parts.rsi
    state: full
  - type: Carriable # Carrying system from nyanotrasen.
  - type: HumanoidAppearance
    species: Human
    hideLayersOnEquip:
    - Hair
    - Snout
  - type: LanguageKnowledge
    speaks:
    - TauCetiBasic
    - SolCommon
    - Eldritch
    - RootSpeak
    - ValyrianStandard
    - Marish
    - Nekomimetic
    - Moffic
    - Draconic
    - Bubblish
    - Canilunzt
    - Elyran
    - Freespeak
    - Tradeband
    - Crab
    - Sign
    understands:
    - TauCetiBasic
    - SolCommon
    - Eldritch
    - RootSpeak
    - ValyrianStandard
    - Marish
    - Nekomimetic
    - Moffic
    - Draconic
    - Bubblish
    - Canilunzt
    - Elyran
    - Freespeak
    - Tradeband
    - Crab
    - Sign
  - type: FootPrints
  - type: Flashable
  - type: PassiveDamage
    allowedStates:
    - Alive
    damageCap: 50
    damage:
      types:
        Heat: -0.09
      groups:
        Brute: -0.09
  - type: StatusEffects
    allowed:
    - Stun
    - KnockedDown
    - SlowedDown
    - Stutter
    - SeeingRainbows
    - Electrocution
    - ForcedSleep
    - TemporaryBlindness
    - Drunk
    - SlurredSpeech
    - RatvarianLanguage
    - PressureImmunity
    - Muted
    - Pacified
    - StaminaModifier
    - PsionicsDisabled
    - PsionicallyInsulated
  - type: Blindable
  - type: Perishable
  - type: OfferItem
  - type: LayingDown
  - type: Shoving
  - type: BloodstreamAffectedByMass
    power: 0.6
  - type: StatusIcon
    bounds: -0.5,-0.5,0.5,0.5
  - type: RotationVisuals
    defaultRotation: 90
    horizontalRotation: 90
  - type: SlowOnDamage
    speedModifierThresholds:
      60: 0.8 # DV - Was 0.7
      80: 0.6 # DV - Was 0.5
  - type: Fixtures
    fixtures: # TODO: This needs a second fixture just for mob collisions.
      fix1:
        shape:
          !type:PhysShapeCircle
          radius: 0.35
        density: 185
        restitution: 0.0
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: FloorOcclusion
  - type: Mood
  - type: RangedDamageSound
    soundGroups:
      Brute:
        collection:
          MeatBulletImpact
    soundTypes:
      Heat:
        collection:
          MeatLaserImpact
  - type: Reactive
    groups:
      Flammable: [ Touch ]
      Extinguish: [ Touch ]
      Acidic: [Touch, Ingestion]
    reactions:
    - reagents: [Water, SpaceCleaner]
      methods: [Touch]
      effects:
      - !type:WashCreamPieReaction
  - type: Body
    prototype: Human
    requiredLegs: 2
  - type: Identity
  - type: IdExaminable
  - type: Hands
  - type: ComplexInteraction
  - type: Internals
  - type: Inventory
  - type: InventorySlots
  - type: FloatingVisuals
  - type: Climbing
  - type: Cuffable
  - type: Ensnareable
    sprite: Objects/Misc/ensnare.rsi
    state: icon
  - type: AnimationPlayer
  - type: Buckle
  - type: SleepEmitSound
  - type: SSDIndicator
  - type: StandingState
  - type: Fingerprint
  - type: Dna
  - type: Scent
  - type: MindContainer
    showExamineInfo: true
  - type: CanHostGuardian
  - type: NpcFactionMember
    factions:
    - NanoTrasen
  - type: CreamPied
  - type: Stripping
  - type: Strippable
  - type: UserInterface
    interfaces:
      enum.HumanoidMarkingModifierKey.Key:
        type: HumanoidMarkingModifierBoundUserInterface
      enum.StrippingUiKey.Key:
        type: StrippableBoundUserInterface
      enum.InstrumentUiKey.Key:
        type: InstrumentBoundUserInterface
        requireInputValidation: false
      enum.RadialSelectorUiKey.Key:
        type: RadialSelectorMenuBUI
      enum.ListViewSelectorUiKey.Key:
        type: ListViewSelectorBUI
      enum.SurgeryUIKey.Key:
        type: SurgeryBui
  - type: Puller
  - type: Speech
    speechSounds: Alto
  - type: DamageForceSay
  - type: Vocal
    sounds:
      Male: MaleHuman
      Female: FemaleHuman
      Unsexed: MaleHuman
  - type: Emoting
  - type: BodyEmotes
    soundsId: GeneralBodyEmotes
  - type: Grammar
    attributes:
      proper: true
  - type: MobPrice
    price: 1500 # Kidnapping a living person and selling them for cred is a good move.
    deathPenalty: 0.01 # However they really ought to be living and intact, otherwise they're worth 100x less.
  - type: CanEscapeInventory # Carrying system from nyanotrasen.
  - type: Tag
    tags:
    - CanPilot
    - FootstepSound
    - DoorBumpOpener
  - type: Targeting
  - type: SurgeryTarget

- type: entity
  name: The one whom enjoys games
  parent: BaseTriomob
  id: Mobtoweg
  description: A miserable pile of emptiness.
  components:
  - type: InputMover
  - type: MobMover
  - type: Loadout
    prototypes: [TowegGear]
  - type: NpcFactionMember
    factions:
    - NanoTrasen

#The Det

- type: entity
  save: false
  parent: BaseTriomob
  id: TriomobTD
  abstract: true
  components:
  - type: Body
    prototype: Arachnid
    requiredLegs: 2 # It would be funny if arachnids could use their little back limbs to move around once they lose their legs, but just something to consider post-woundmed
  - type: HumanoidAppearance
    species: Arachnid
  - type: Carriable # Carrying system from nyanotrasen.
  - type: Thirst
  - type: Sericulture
    action: ActionSericulture
    productionLength: 2
    entityProduced: MaterialWebSilk1
    hungerCost: 4 # Should total to 25 total silk on full hunger
  - type: Tag
    tags:
    - CanPilot
    - FootstepSound
    - DoorBumpOpener
    - SpiderCraft
  - type: Inventory
    templateId: arachnid
  - type: Reactive
    reactions:
    - reagents: [Water]
      methods: [Touch]
      effects:
      - !type:WearableReaction
        slot: head
        prototypeID: WaterDropletHat
    - reagents: [Water, SpaceCleaner]
      methods: [Touch]
      effects:
      - !type:WashCreamPieReaction
  - type: BloodSucker
    webRequired: true
  - type: Cocooner
  # Damage (Self)
  - type: Bloodstream
    bloodReagent: CopperBlood
  # Damage (Others)
  - type: MeleeWeapon
    animation: WeaponArcBite
    soundHit:
      path: /Audio/Effects/bite.ogg
    damage:
      types:
        Piercing: 5
  # Visual & Audio
  - type: DamageVisuals
    damageOverlayGroups:
      Brute:
        sprite: Mobs/Effects/brute_damage.rsi
        color: "#162581"
  - type: Speech
    speechVerb: Arachnid
    speechSounds: Arachnid
    allowedEmotes: ['Click', 'Chitter']
  - type: Vocal
    sounds:
      Male: UnisexArachnid
      Female: UnisexArachnid
      Unsexed: UnisexArachnid
  - type: TypingIndicator
    proto: spider
  - type: Sprite # I'd prefer if these maps were better. Insert map pun here.
    layers:
      - map: [ "enum.HumanoidVisualLayers.Chest" ]
      - map: [ "enum.HumanoidVisualLayers.Head" ]
      - map: [ "enum.HumanoidVisualLayers.Snout" ]
      - map: [ "enum.HumanoidVisualLayers.Eyes" ]
      - map: [ "enum.HumanoidVisualLayers.RArm" ]
      - map: [ "enum.HumanoidVisualLayers.LArm" ]
      - map: [ "enum.HumanoidVisualLayers.RLeg" ]
      - map: [ "enum.HumanoidVisualLayers.LLeg" ]
      - shader: StencilClear
        sprite: Mobs/Species/Human/parts.rsi #PJB on stencil clear being on the left leg: "...this is 'fine'" -https://github.com/space-wizards/space-station-14/pull/12217#issuecomment-1291677115
        # its fine, but its still very stupid that it has to be done like this instead of allowing sprites to just directly insert a stencil clear.
        # sprite refactor when
        state: l_leg
      - shader: StencilMask
        map: ["enum.HumanoidVisualLayers.StencilMask"]
        sprite: Mobs/Customization/masking_helpers.rsi
        state: unisex_full
        visible: false
      - map: ["jumpsuit"]
      - map: ["enum.HumanoidVisualLayers.LFoot"]
      - map: ["enum.HumanoidVisualLayers.RFoot"]
      - map: ["enum.HumanoidVisualLayers.LHand"]
      - map: ["enum.HumanoidVisualLayers.RHand"]
      - map: [ "gloves" ]
      - map: [ "shoes" ]
      - map: [ "ears" ]
      - map: [ "outerClothing" ]
      - map: [ "eyes" ]
      - map: [ "belt" ]
      - map: [ "id" ]
      - map: [ "enum.HumanoidVisualLayers.Tail" ] # Mentioned in moth code: This needs renaming lol.
      - map: [ "neck" ]
      - map: [ "back" ]
      - map: [ "enum.HumanoidVisualLayers.FacialHair" ]
      - map: [ "enum.HumanoidVisualLayers.Hair" ] # Do these need to be here? (arachnid hair arachnid hair)
      - map: [ "enum.HumanoidVisualLayers.HeadSide" ]
      - map: [ "enum.HumanoidVisualLayers.HeadTop" ]
      - map: [ "mask" ]
      - map: [ "head" ]
      - map: [ "pocket1" ]
      - map: [ "pocket2" ]
      - map: ["enum.HumanoidVisualLayers.Handcuffs"]
        color: "#ffffff"
        sprite: Objects/Misc/handcuffs.rsi
        state: body-overlay-2
        visible: false
      - map: [ "clownedon" ] # Dynamically generated
        sprite: "Effects/creampie.rsi"
        state: "creampie_arachnid"
        visible: false
  - type: Spider
  - type: IgnoreSpiderWeb
  - type: FootPrints
    leftBarePrint: "footprint-left-bare-spider"
    rightBarePrint: "footprint-right-bare-spider"

- type: entity
  name: The detective
  parent: TriomobTD
  id: MobTD
  description: A strange silent man.
  components:
  - type: InputMover
  - type: MobMover
  - type: Loadout
    prototypes: [TDGear]
  - type: NpcFactionMember
    factions:
    - NanoTrasen
